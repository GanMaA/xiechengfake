<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.lanqiao.mapper.LoginMapper" >
  <resultMap id="BaseResultMap" type="org.lanqiao.entity.Login" >
    <id column="login_id" property="loginId" jdbcType="INTEGER" />
    <result column="phone_num" property="phoneNum" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="card_num" property="cardNum" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="code_id" property="codeId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    login_id, phone_num, email, card_num, password, user_id, code_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from login
    where login_id = #{loginId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from login
    where login_id = #{loginId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.lanqiao.entity.Login" >
    insert into login (login_id, phone_num, email, 
      card_num, password, user_id, 
      code_id)
    values (#{loginId,jdbcType=INTEGER}, #{phoneNum,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{cardNum,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{codeId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.lanqiao.entity.Login" >
    insert into login
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="loginId != null" >
        login_id,
      </if>
      <if test="phoneNum != null" >
        phone_num,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="cardNum != null" >
        card_num,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="codeId != null" >
        code_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="loginId != null" >
        #{loginId,jdbcType=INTEGER},
      </if>
      <if test="phoneNum != null" >
        #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="cardNum != null" >
        #{cardNum,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="codeId != null" >
        #{codeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.lanqiao.entity.Login" >
    update login
    <set >
      <if test="phoneNum != null" >
        phone_num = #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="cardNum != null" >
        card_num = #{cardNum,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="codeId != null" >
        code_id = #{codeId,jdbcType=INTEGER},
      </if>
    </set>
    where login_id = #{loginId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.lanqiao.entity.Login" >
    update login
    set phone_num = #{phoneNum,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      card_num = #{cardNum,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      code_id = #{codeId,jdbcType=INTEGER}
    where login_id = #{loginId,jdbcType=INTEGER}
  </update>
</mapper>